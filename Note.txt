Linear Data Structure
- Array
- Queue
- Stack
- Linked List
- Double Link List


Non-linear Data Structure:

- Binary Tree: 
	+ Pre-order traversal: From Node -> left-node -> right-node
	+ In-order traversal: From left-node -> Node -> right-node
	+ Post-order traversal: From left-node -> right-node -> Node
	+ Breath-order traversal: Enqueue root, then enqueue root.left, root.right, and so on
- Binary Search Tree: 
	+ Insertion: Compare the new node to the current node, until the current node is null then place it there
	+ Deletion: Splice the node if it doesn't have full child, else choose the lowest right branch or highest
	left branch to swap, then slice the last node that was just swapped. 
	+ Search: Compare the value with the value of each node, until they are equal. If the null node is reach, there is no match
- Balanced Tree: For every node, the height of its left sub tree and height of its right sub tree differ no more than 1
- Perfectly Balanced Tree: Balanced, and all leaves are filled in the last level
- Binary Heap: The parent is always greater than or equal to its children


- Graph
- Undirected Graph
- Directed Graph